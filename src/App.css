.card-3d {
  transform-style: preserve-3d !important;
  backface-visibility: hidden !important;
  transform-origin: center center !important;
  animation: card3DFloat infinite alternate linear;
  animation-delay: 0ms;
  animation-duration: var(--animation-duration, 3000ms);
  animation-play-state: var(--animation-play-state, running);
  will-change: transform;
}

@keyframes card3DFloat {
  0% {
    transform: translate3d(0, var(--tw-translate-y), 0) rotateX(0deg)
      rotateY(0deg) rotateZ(0deg);
  }
  50% {
    transform: translate3d(0, var(--tw-translate-y), 0) rotateX(-2deg)
      rotateY(2deg) rotateZ(-4deg);
  }
  100% {
    transform: translate3d(0, var(--tw-translate-y), 0) rotateX(4deg)
      rotateY(-5deg) rotateZ(4deg);
  }
}

@property --num {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

.animated-score {
  counter-reset: num var(--current-num);
  min-width: 1ch;
}

.animated-score.animate {
  animation: counter 1s forwards ease-out;
  counter-reset: num var(--num);
}

.animated-score::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: var(--prev-num);
  }
  to {
    --num: var(--current-num);
  }
}
